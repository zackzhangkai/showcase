// idl/hello/hello.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.14.0
// source: review.proto

package review

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	_ "reviews/biz/model/api"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_Success      Code = 0
	Code_ParamInvalid Code = 1
	Code_DBErr        Code = 2
	Code_InternalErr  Code = 3
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "Success",
		1: "ParamInvalid",
		2: "DBErr",
		3: "InternalErr",
	}
	Code_value = map[string]int32{
		"Success":      0,
		"ParamInvalid": 1,
		"DBErr":        2,
		"InternalErr":  3,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_review_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_review_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{0}
}

type Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty" form:"ID" query:"ID"`
	Name    string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" form:"Name" query:"Name"`
	GoodsID int64  `protobuf:"varint,3,opt,name=GoodsID,proto3" json:"GoodsID,omitempty" form:"GoodsID" query:"GoodsID"`
	Content string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty" form:"Content" query:"Content"`
	Author  string `protobuf:"bytes,5,opt,name=Author,proto3" json:"Author,omitempty" form:"Author" query:"Author"`
}

func (x *Review) Reset() {
	*x = Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{0}
}

func (x *Review) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Review) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Review) GetGoodsID() int64 {
	if x != nil {
		return x.GoodsID
	}
	return 0
}

func (x *Review) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Review) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type CreateReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"name,omitempty" form:"name" vd:"(len($) > 0 && len($) < 100)"`
	GoodsID int64  `protobuf:"varint,2,opt,name=GoodsID,proto3" json:"goods_id,omitempty" form:"goods_id" vd:"$>0"`
	Content string `protobuf:"bytes,3,opt,name=Content,proto3" json:"content,omitempty" form:"content" vd:"(len($) > 0 && len($) < 1000)"`
	Author  string `protobuf:"bytes,4,opt,name=Author,proto3" json:"author,omitempty" form:"author" vd:"(len($) > 0 && len($) < 1000)"`
	Star    int64  `protobuf:"varint,5,opt,name=Star,proto3" json:"star,omitempty" form:"star" vd:"$>0"`
}

func (x *CreateReviewReq) Reset() {
	*x = CreateReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewReq) ProtoMessage() {}

func (x *CreateReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewReq.ProtoReflect.Descriptor instead.
func (*CreateReviewReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReviewReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateReviewReq) GetGoodsID() int64 {
	if x != nil {
		return x.GoodsID
	}
	return 0
}

func (x *CreateReviewReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateReviewReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateReviewReq) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

type CreateReviewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Code   `protobuf:"varint,1,opt,name=Code,proto3,enum=review.Code" json:"Code,omitempty" form:"Code" query:"Code"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty" form:"Msg" query:"Msg"`
}

func (x *CreateReviewResp) Reset() {
	*x = CreateReviewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewResp) ProtoMessage() {}

func (x *CreateReviewResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewResp.ProtoReflect.Descriptor instead.
func (*CreateReviewResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReviewResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *CreateReviewResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type QueryReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword  string `protobuf:"bytes,1,opt,name=Keyword,proto3" json:"Keyword,omitempty" form:"keyword" query:"keyword"`
	GoodsID  int64  `protobuf:"varint,2,opt,name=GoodsID,proto3" json:"GoodsID,omitempty" form:"goods_id" query:"goods_id" vd:"$>0"`
	Page     int64  `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty" form:"page" query:"page" vd:"$>0"`
	PageSize int64  `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty" form:"page_size" query:"page_size" vd:"($ > 0 || $ <= 100)"`
}

func (x *QueryReviewReq) Reset() {
	*x = QueryReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReviewReq) ProtoMessage() {}

func (x *QueryReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReviewReq.ProtoReflect.Descriptor instead.
func (*QueryReviewReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{3}
}

func (x *QueryReviewReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryReviewReq) GetGoodsID() int64 {
	if x != nil {
		return x.GoodsID
	}
	return 0
}

func (x *QueryReviewReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryReviewReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Review []*Review `protobuf:"bytes,1,rep,name=Review,proto3" json:"Review,omitempty" form:"Review" query:"Review"`
	Total  int64     `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty" form:"Total" query:"Total"`
	Star   int64     `protobuf:"varint,3,opt,name=Star,proto3" json:"Star,omitempty" form:"Star" query:"Star"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{4}
}

func (x *Data) GetReview() []*Review {
	if x != nil {
		return x.Review
	}
	return nil
}

func (x *Data) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Data) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

type QueryReviewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Code   `protobuf:"varint,1,opt,name=Code,proto3,enum=review.Code" json:"Code,omitempty" form:"Code" query:"Code"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty" form:"Msg" query:"Msg"`
	Data *Data  `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty" form:"Data" query:"Data"`
}

func (x *QueryReviewResp) Reset() {
	*x = QueryReviewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReviewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReviewResp) ProtoMessage() {}

func (x *QueryReviewResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReviewResp.ProtoReflect.Descriptor instead.
func (*QueryReviewResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{5}
}

func (x *QueryReviewResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *QueryReviewResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryReviewResp) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty" path:"id" vd:"$>0"`
}

func (x *DeleteReviewReq) Reset() {
	*x = DeleteReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReviewReq) ProtoMessage() {}

func (x *DeleteReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReviewReq.ProtoReflect.Descriptor instead.
func (*DeleteReviewReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteReviewReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteReviewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Code   `protobuf:"varint,1,opt,name=Code,proto3,enum=review.Code" json:"Code,omitempty" form:"Code" query:"Code"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty" form:"Msg" query:"Msg"`
}

func (x *DeleteReviewResp) Reset() {
	*x = DeleteReviewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReviewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReviewResp) ProtoMessage() {}

func (x *DeleteReviewResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReviewResp.ProtoReflect.Descriptor instead.
func (*DeleteReviewResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteReviewResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *DeleteReviewResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateReviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      int64  `protobuf:"varint,1,opt,name=ID,proto3" form:"id" json:"id,omitempty" vd:"$>0"`
	Name    string `protobuf:"bytes,2,opt,name=Name,proto3" json:"name,omitempty" form:"name" vd:"(len($) > 0 && len($) < 100)"`
	Content string `protobuf:"bytes,3,opt,name=Content,proto3" json:"content,omitempty" form:"content" vd:"(len($) > 0 && len($) < 1000)"`
	GoodsID int64  `protobuf:"varint,4,opt,name=GoodsID,proto3" json:"goods_id,omitempty" form:"goods_id" vd:"$>0"`
	Author  string `protobuf:"bytes,5,opt,name=Author,proto3" json:"author,omitempty" form:"author" vd:"(len($) > 0 && len($) < 1000)"`
	Star    int64  `protobuf:"varint,6,opt,name=Star,proto3" json:"star,omitempty" form:"star" vd:"$>0"`
}

func (x *UpdateReviewReq) Reset() {
	*x = UpdateReviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewReq) ProtoMessage() {}

func (x *UpdateReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewReq.ProtoReflect.Descriptor instead.
func (*UpdateReviewReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateReviewReq) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateReviewReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateReviewReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateReviewReq) GetGoodsID() int64 {
	if x != nil {
		return x.GoodsID
	}
	return 0
}

func (x *UpdateReviewReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *UpdateReviewReq) GetStar() int64 {
	if x != nil {
		return x.Star
	}
	return 0
}

type UpdateReviewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Code   `protobuf:"varint,1,opt,name=Code,proto3,enum=review.Code" json:"Code,omitempty" form:"Code" query:"Code"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty" form:"Msg" query:"Msg"`
}

func (x *UpdateReviewResp) Reset() {
	*x = UpdateReviewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewResp) ProtoMessage() {}

func (x *UpdateReviewResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewResp.ProtoReflect.Descriptor instead.
func (*UpdateReviewResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateReviewResp) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Success
}

func (x *UpdateReviewResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_review_proto protoreflect.FileDescriptor

var file_review_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x78, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0xe1, 0x02, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12,
	0x44, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xca,
	0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xda, 0xbb, 0x18, 0x1c, 0x28, 0x6c, 0x65, 0x6e, 0x28,
	0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29,
	0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x29, 0xe2, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1f, 0xca, 0xbb, 0x18, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0xe2, 0xbb, 0x18, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44,
	0x12, 0x51, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x37, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0xda, 0xbb,
	0x18, 0x1d, 0x28, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26,
	0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x29, 0xe2,
	0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x35, 0xca, 0xbb, 0x18, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0xda,
	0xbb, 0x18, 0x1d, 0x28, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26,
	0x26, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x29,
	0xe2, 0xbb, 0x18, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x17, 0xca, 0xbb, 0x18, 0x04, 0x73, 0x74, 0x61, 0x72, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e,
	0x30, 0xe2, 0xbb, 0x18, 0x04, 0x73, 0x74, 0x61, 0x72, 0x52, 0x04, 0x53, 0x74, 0x61, 0x72, 0x22,
	0x46, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0xf9, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x07, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xb2, 0xbb, 0x18,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0xe2, 0xbb, 0x18, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x07,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1f, 0xb2,
	0xbb, 0x18, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24,
	0x3e, 0x30, 0xe2, 0xbb, 0x18, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x52, 0x07,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0xb2, 0xbb, 0x18, 0x04, 0x70, 0x61, 0x67, 0x65, 0xda,
	0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0xe2, 0xbb, 0x18, 0x04, 0x70, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x31, 0xb2, 0xbb, 0x18, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0xda, 0xbb, 0x18, 0x13, 0x28, 0x24, 0x20, 0x3e, 0x20, 0x30, 0x20,
	0x7c, 0x7c, 0x20, 0x24, 0x20, 0x3c, 0x3d, 0x20, 0x31, 0x30, 0x30, 0x29, 0xe2, 0xbb, 0x18, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x58, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x74, 0x61, 0x72, 0x22, 0x67, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xd2, 0xbb, 0x18, 0x02, 0x69, 0x64, 0xda, 0xbb, 0x18,
	0x03, 0x24, 0x3e, 0x30, 0x52, 0x02, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x80, 0x03, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x0d, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x30, 0xca, 0xbb, 0x18, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xda, 0xbb, 0x18, 0x1c, 0x28,
	0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65,
	0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x29, 0xe2, 0xbb, 0x18, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xca, 0xbb, 0x18, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0xda, 0xbb, 0x18, 0x1d, 0x28, 0x6c, 0x65, 0x6e, 0x28,
	0x24, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29,
	0x20, 0x3c, 0x20, 0x31, 0x30, 0x30, 0x30, 0x29, 0xe2, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x07,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1f, 0xca,
	0xbb, 0x18, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24,
	0x3e, 0x30, 0xe2, 0xbb, 0x18, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x52, 0x07,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x44, 0x12, 0x4d, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x35, 0xca, 0xbb, 0x18, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0xda, 0xbb, 0x18, 0x1d, 0x28, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3e,
	0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x24, 0x29, 0x20, 0x3c, 0x20, 0x31,
	0x30, 0x30, 0x30, 0x29, 0xe2, 0xbb, 0x18, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0xca, 0xbb, 0x18, 0x04, 0x73, 0x74, 0x61, 0x72, 0xda, 0xbb,
	0x18, 0x03, 0x24, 0x3e, 0x30, 0xe2, 0xbb, 0x18, 0x04, 0x73, 0x74, 0x61, 0x72, 0x52, 0x04, 0x53,
	0x74, 0x61, 0x72, 0x22, 0x46, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x2a, 0x41, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x42, 0x45, 0x72, 0x72, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x10, 0x03, 0x32, 0xfd,
	0x02, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x55, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x17,
	0xca, 0xc1, 0x18, 0x13, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x2e, 0x30,
	0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x5a, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x17, 0xd2, 0xc1, 0x18, 0x13,
	0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x2e, 0x30, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x17, 0xd2, 0xc1, 0x18, 0x13, 0x2f, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x2e, 0x30, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x5d, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x17, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1a, 0xd2, 0xc1, 0x18, 0x16, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f,
	0x76, 0x31, 0x2e, 0x30, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x69, 0x64, 0x42, 0x1a,
	0x5a, 0x18, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_review_proto_rawDescOnce sync.Once
	file_review_proto_rawDescData = file_review_proto_rawDesc
)

func file_review_proto_rawDescGZIP() []byte {
	file_review_proto_rawDescOnce.Do(func() {
		file_review_proto_rawDescData = protoimpl.X.CompressGZIP(file_review_proto_rawDescData)
	})
	return file_review_proto_rawDescData
}

var file_review_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_review_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_review_proto_goTypes = []interface{}{
	(Code)(0),                // 0: review.Code
	(*Review)(nil),           // 1: review.Review
	(*CreateReviewReq)(nil),  // 2: review.CreateReviewReq
	(*CreateReviewResp)(nil), // 3: review.CreateReviewResp
	(*QueryReviewReq)(nil),   // 4: review.QueryReviewReq
	(*Data)(nil),             // 5: review.Data
	(*QueryReviewResp)(nil),  // 6: review.QueryReviewResp
	(*DeleteReviewReq)(nil),  // 7: review.DeleteReviewReq
	(*DeleteReviewResp)(nil), // 8: review.DeleteReviewResp
	(*UpdateReviewReq)(nil),  // 9: review.UpdateReviewReq
	(*UpdateReviewResp)(nil), // 10: review.UpdateReviewResp
}
var file_review_proto_depIdxs = []int32{
	0,  // 0: review.CreateReviewResp.Code:type_name -> review.Code
	1,  // 1: review.Data.Review:type_name -> review.Review
	0,  // 2: review.QueryReviewResp.Code:type_name -> review.Code
	5,  // 3: review.QueryReviewResp.Data:type_name -> review.Data
	0,  // 4: review.DeleteReviewResp.Code:type_name -> review.Code
	0,  // 5: review.UpdateReviewResp.Code:type_name -> review.Code
	4,  // 6: review.ReviewService.GetReview:input_type -> review.QueryReviewReq
	2,  // 7: review.ReviewService.CreateReview:input_type -> review.CreateReviewReq
	9,  // 8: review.ReviewService.UpdateReview:input_type -> review.UpdateReviewReq
	7,  // 9: review.ReviewService.DeleteReview:input_type -> review.DeleteReviewReq
	6,  // 10: review.ReviewService.GetReview:output_type -> review.QueryReviewResp
	3,  // 11: review.ReviewService.CreateReview:output_type -> review.CreateReviewResp
	10, // 12: review.ReviewService.UpdateReview:output_type -> review.UpdateReviewResp
	8,  // 13: review.ReviewService.DeleteReview:output_type -> review.DeleteReviewResp
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_review_proto_init() }
func file_review_proto_init() {
	if File_review_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_review_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReviewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReviewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_review_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_review_proto_goTypes,
		DependencyIndexes: file_review_proto_depIdxs,
		EnumInfos:         file_review_proto_enumTypes,
		MessageInfos:      file_review_proto_msgTypes,
	}.Build()
	File_review_proto = out.File
	file_review_proto_rawDesc = nil
	file_review_proto_goTypes = nil
	file_review_proto_depIdxs = nil
}
